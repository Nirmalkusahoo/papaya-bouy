[
  {
    "topic": "DynamicProgramming",
    "questionTitle": "509. Fibonacci Number",
    "questionUrl": "https://leetcode.com/problems/fibonacci-number/",
    "hint": "See this is first program of DP and you need to remember all th ways. recursion + memoization + tabulation.",
    "answerDetails": [
      {
        "level": "TUF-DP.1",
        "url": "https://youtu.be/tyB0ztf0DNY"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "1137. N-th Tribonacci Number",
    "questionUrl": "https://leetcode.com/problems/n-th-tribonacci-number/",
    "hint": "Similar to [509. Fibonacci Number](https://leetcode.com/problems/fibonacci-number/).Similar to [509. Fibonacci Number](https://leetcode.com/problems/fibonacci-number/)"
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "70. Climbing Stairs",
    "questionUrl": "https://leetcode.com/problems/climbing-stairs/",
    "hint": "here to go to height 4 having steps 2 , you can get the value by no of ways to reach height 3 and 2\n* So its like height-noOfStepsYouHave. To reach height[0]=1;height[1]=1;",
    "answerDetails": [
      {
        "level": "TUF-DP.2",
        "url": "https://youtu.be/mLfjzJsN8us"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "Geek Jump",
    "questionUrl": "https://practice.geeksforgeeks.org/problems/geek-jump/1",
    "hint": "Simple.",
    "answerDetails": [
      {
        "level": "TUF-DP.3",
        "url": "https://youtu.be/EgG3jsGoPvQ"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "746. Min Cost Climbing Stairs",
    "questionUrl": "https://leetcode.com/problems/min-cost-climbing-stairs/",
    "hint": "See you need to find current cost + Math.min(cost[i-1],cost[i-2])\n* See here the striver approach will work wil slight change, because frog jump is different from this problem.It is\npartially similar. It still needs practises.",
    "answerDetails": [
      {
        "level": "TUF-DP.3",
        "url": "https://youtu.be/EgG3jsGoPvQ"
      },
      {
        "level": "Leetcode",
        "url": "https://leetcode.com/problems/min-cost-climbing-stairs/discuss/476388/4-ways-or-Step-by-step-from-Recursion-greater-top-down-DP-greater-bottom-up-DP-greater-fine-tuning"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "198. House Robber",
    "questionUrl": "https://leetcode.com/problems/house-robber/",
    "hint": "~~Similar to [Max subset sum no adjacent](https://www.algoexpert.io/questions/max-subset-sum-no-adjacent)\n.Algo-expert may be helpful for this particular problem. But Striver teaches how to solve by yourself.\n* So for now watch striver video. this is important video, since here he has explained very well all the approaches.\nIt is indeed worth watching this one.~~\n* Simple pick and not pick problem, the base case will be different if you start from 0 and n.",
    "answerDetails": [
      {
        "level": "TUF-DP.5",
        "url": "https://youtu.be/GrMBfJNk_NY"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "Ninja's Training",
    "questionUrl": "https://www.codingninjas.com/codestudio/problems/ninja-s-training_3621003?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos",
    "hint": "This is important video, since Striver he has explained very well all the approaches for 2D DP patterns. It is\n  indeed worth watching this one.",
    "answerDetails": [
      {
        "level": "TUF-DP.7",
        "url": "https://www.youtube.com/watch?v=AE39gJYuRog&list=PLgUwDviBIf0qUlt5H_kiKYaNSqJ81PMMY&index=8"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "256. Paint House",
    "questionUrl": "https://leetcode.com/problems/paint-house/",
    "hint": "Similar to [Ninja's Training].Here the in DP approach slight trick is there."
  }
]

