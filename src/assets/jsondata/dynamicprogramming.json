[
  {
    "topic": "DynamicProgramming",
    "questionTitle": "509. Fibonacci Number",
    "questionUrl": "https://leetcode.com/problems/fibonacci-number/",
    "hint": "See this is first program of DP and you need to remember all th ways. recursion + memoization + tabulation.",
    "answerDetails": [
      {
        "level": "TUF-DP.1",
        "url": "https://youtu.be/tyB0ztf0DNY"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "1137. N-th Tribonacci Number",
    "questionUrl": "https://leetcode.com/problems/n-th-tribonacci-number/",
    "hint": "Similar to [509. Fibonacci Number](https://leetcode.com/problems/fibonacci-number/).Similar to [509. Fibonacci Number](https://leetcode.com/problems/fibonacci-number/)"
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "70. Climbing Stairs",
    "questionUrl": "https://leetcode.com/problems/climbing-stairs/",
    "hint": "here to go to height 4 having steps 2 , you can get the value by no of ways to reach height 3 and 2\n* So its like height-noOfStepsYouHave. To reach height[0]=1;height[1]=1;",
    "answerDetails": [
      {
        "level": "TUF-DP.2",
        "url": "https://youtu.be/mLfjzJsN8us"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "Geek Jump",
    "questionUrl": "https://practice.geeksforgeeks.org/problems/geek-jump/1",
    "hint": "Simple.",
    "answerDetails": [
      {
        "level": "TUF-DP.3",
        "url": "https://youtu.be/EgG3jsGoPvQ"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "746. Min Cost Climbing Stairs",
    "questionUrl": "https://leetcode.com/problems/min-cost-climbing-stairs/",
    "hint": "See you need to find current cost + Math.min(cost[i-1],cost[i-2])\n* See here the striver approach will work wil slight change, because frog jump is different from this problem.It is\npartially similar. It still needs practises.",
    "answerDetails": [
      {
        "level": "TUF-DP.3",
        "url": "https://youtu.be/EgG3jsGoPvQ"
      },
      {
        "level": "Leetcode",
        "url": "https://leetcode.com/problems/min-cost-climbing-stairs/discuss/476388/4-ways-or-Step-by-step-from-Recursion-greater-top-down-DP-greater-bottom-up-DP-greater-fine-tuning"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "198. House Robber",
    "questionUrl": "https://leetcode.com/problems/house-robber/",
    "hint": "~~Similar to [Max subset sum no adjacent](https://www.algoexpert.io/questions/max-subset-sum-no-adjacent)\n.Algo-expert may be helpful for this particular problem. But Striver teaches how to solve by yourself.\n* So for now watch striver video. this is important video, since here he has explained very well all the approaches.\nIt is indeed worth watching this one.~~\n* Simple pick and not pick problem, the base case will be different if you start from 0 and n.",
    "answerDetails": [
      {
        "level": "TUF-DP.5",
        "url": "https://youtu.be/GrMBfJNk_NY"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "Ninja's Training",
    "questionUrl": "https://www.codingninjas.com/codestudio/problems/ninja-s-training_3621003?source=youtube&campaign=striver_dp_videos&utm_source=youtube&utm_medium=affiliate&utm_campaign=striver_dp_videos",
    "hint": "This is important video, since Striver he has explained very well all the approaches for 2D DP patterns. It is\n  indeed worth watching this one.",
    "answerDetails": [
      {
        "level": "TUF-DP.7",
        "url": "https://www.youtube.com/watch?v=AE39gJYuRog&list=PLgUwDviBIf0qUlt5H_kiKYaNSqJ81PMMY&index=8"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "256. Paint House",
    "questionUrl": "https://leetcode.com/problems/paint-house/",
    "hint": "Similar to [Ninja's Training].Here the in DP approach slight trick is there."
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "1289. Minimum Falling Path Sum II",
    "questionUrl": "https://leetcode.com/problems/minimum-falling-path-sum-ii/",
    "hint": "Similar to [Ninja's Training]."
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "62. Unique Paths",
    "questionUrl": "https://leetcode.com/problems/unique-paths/",
    "hint": "Simple recursive approach then optimize.",
    "answerDetails": [
      {
        "level": "TUF-DP.8",
        "url": "https://youtu.be/sdE0A2Oxofw"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "63. Unique Paths II",
    "questionUrl": "https://leetcode.com/problems/unique-paths-ii/",
    "hint": "It's not that complex. Basic fundamental logic is for each position find how many ways are there to reach.And at\nthe end you will have value for reaching the bottom right position.Find the ways to reach for first column and row\nvalues in if condition and then using these values you can get other values position obstacleGrid[i][j] =\nobstacleGrid[i - 1][j] + obstacleGrid[i][j - 1]; Solution 3 code. Follow striver approach.",
    "answerDetails": [
      {
        "level": "TUF-DP.9",
        "url": "https://youtu.be/TmhpgXScLyY"
      },
      {
        "level": "AME",
        "url": "https://www.youtube.com/watch?v=nZSXWXzn1aM"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "64. Minimum Path Sum",
    "questionUrl": "https://leetcode.com/problems/minimum-path-sum/",
    "hint": "Simple problem. You just need store sum of current grid value + min(leftGridValue,topGridValue).\n* And at the end you can return grid[m-1][n-1] value. this will have min path sum",
    "answerDetails": [
      {
        "level": "TUF-DP.10",
        "url": "https://youtu.be/_rgTlyky1uQ"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "1463. Cherry Pickup II",
    "questionUrl": "https://leetcode.com/problems/cherry-pickup-ii/",
    "hint": " See code wise solution 1 simple to write and simple to understand too. ButI have just followed striver approach\nwhich is more helpful in long run/problem-solving ability\n* while practising try writing it from solution 2 and reach to 3.",
    "answerDetails": [
      {
        "level": "TUF-DP.13",
        "url": "https://youtu.be/QGfn7JeXK54"
      },
      {
        "level": "Leetcode",
        "url": "https://leetcode.com/problems/cherry-pickup-ii/discuss/660562/C%2B%2BJavaPython-Top-Down-DP-Clean-code"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "120. Triangle",
    "questionUrl": "https://leetcode.com/problems/triangle/",
    "hint": "~~Solutions 4 & 5 should be fine for interview , did in all ways. AME also did in solution 6 way.\n* here take min of above tow possible value, except when you are in first column and last column.~~\n* Multi option base case.Variable Ending Points.",
    "answerDetails": [
      {
        "level": "TUF-DP.11",
        "url": "https://youtu.be/SrP-PiLSYC0"
      },
      {
        "level": "AME",
        "url": "https://www.youtube.com/watch?v=O2eaAdBpZBQ"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "931. Minimum Falling Path Sum",
    "questionUrl": "https://leetcode.com/problems/minimum-falling-path-sum/",
    "hint": "Since its variable start point and end point use recursive call in for loop.\n* Simple problem you just need minimum diagonal elements.",
    "answerDetails": [
      {
        "level": "TUF-DP.12",
        "url": "https://youtu.be/N_aJ5qQbYA0"
      },
      {
        "level": "AME",
        "url": "https://www.youtube.com/watch?v=N_aJ5qQbYA0&list=PLgUwDviBIf0qUlt5H_kiKYaNSqJ81PMMY&index=14"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "605. Can Place Flowers",
    "questionUrl": "https://leetcode.com/problems/can-place-flowers/",
    "hint": "normal greedy approach with tow variable prev and next and handling 0 and length-1 index."
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "Subset Sum Equal To K",
    "questionUrl": "https://www.codingninjas.com/codestudio/problems/subset-sum-equal-to-k_1550954?leftPanelTab=0",
    "hint": "Striver, make u understand recursion->memoization and from Tushar tabulation-space optimization",
    "answerDetails": [
      {
        "level": "TUF-DP.14",
        "url": "https://youtu.be/fWX9xDmIzRI"
      },
      {
        "level": "Tushar Roy",
        "url": "https://youtu.be/s6FhG--P7z0"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "416. Partition Equal Subset Sum",
    "questionUrl": "https://leetcode.com/problems/partition-equal-subset-sum/",
    "hint": "Similar to [Subset Sum Equal To K].Its just that target will be totalSum/2.And if sum%2!=0 means it's not possible",
    "answerDetails": [
      {
        "level": "TUF-DP.15",
        "url": "https://youtu.be/7win3dcgo3k"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "2035. Partition Array Into Two Arrays to Minimize Sum Difference",
    "questionUrl": "https://leetcode.com/problems/partition-array-into-two-arrays-to-minimize-sum-difference/",
    "hint": "Similar subset sum problem with little trick.Understood clearly both the solution But both Striver and Aditya\nsolution failing for negative values.",
    "answerDetails": [
      {
        "level": "TUF-DP.16",
        "url": "https://youtu.be/GS_OqZb2CWc"
      },
      {
        "level": "Aditya",
        "url": "https://www.youtube.com/watch?v=-GtpxG6l_Mc"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "Counts Subsets with Sum K",
    "questionUrl": "https://www.codingninjas.com/studio/problems/number-of-subsets_3952532",
    "hint": "Understood clearly the solution But need to get hold of space optimization solution. Didn't find leetcode problem.",
    "answerDetails": [
      {
        "level": "TUF-DP.17",
        "url": "https://youtu.be/ZHyb-A2Mte4"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "Count Partitions With Given Difference",
    "questionUrl": "https://www.codingninjas.com/studio/problems/partitions-with-given-difference_3751628",
    "hint": "Same as count subset sum of k with little change .Understood clearly the solution But need to get hold of space\noptimization solution. Didn't find leetcode problem.",
    "answerDetails": [
      {
        "level": "TUF-DP.18",
        "url": "https://youtu.be/zoilQD1kYSg"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "0/1 Knapsack",
    "questionUrl": "https://www.codingninjas.com/studio/problems/0-1-knapsack_920542",
    "hint": "Watched both Striver and Tushar video.Watch tushar for tabulation intuition and for other concepts watch strivers.\n* Knapsack concept will be cleared. House robber problem",
    "answerDetails": [
      {
        "level": "TUF-DP.19",
        "url": "https://youtu.be/GqOmJHQZivw"
      },
      {
        "level": "Tushar Roy",
        "url": "https://youtu.be/8LusJS5-AGo"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "322. Coin Change",
    "questionUrl": "https://leetcode.com/problems/coin-change/",
    "hint": "See base case is important. u can't write coins[index] <= amount in base case.\n* simple formula ways[targetAMount] = ways[targetAMount] + ways[targetAMount - coin];",
    "answerDetails": [
      {
        "level": "TUF-DP.20",
        "url": "https://youtu.be/myPeWb3Y68A?si=IU8oqfKf-HFAF8GS"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "983. Minimum Cost For Tickets",
    "questionUrl": "https://leetcode.com/problems/minimum-cost-for-tickets/",
    "hint": "Interesting one.Same as [322. Coin Change]. See 0- endDay flow didn't work, so did n->0 . Memoize in 1D array.",
    "answerDetails": [
      {
        "level": "Leetcode",
        "url": "https://leetcode.com/problems/minimum-cost-for-tickets/solutions/2345641/dp-solution-as-striver-taught-beginner-friendly/"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "494. Target Sum",
    "questionUrl": "https://leetcode.com/problems/target-sum/",
    "hint": "similar to [Count Partitions With Given Difference][TUF](https://youtu.be/zoilQD1kYSg). Base case is trick for 0.\n* Did it in positive and negative option ways also.",
    "answerDetails": [
      {
        "level": "TUF-DP.21",
        "url": "https://youtu.be/b3GD8263-PQ"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "518. Coin Change II",
    "questionUrl": "https://leetcode.com/problems/coin-change-ii/",
    "hint": "similar to [494. Target Sum](https://leetcode.com/problems/target-sum/)\n* Since you infinite coin supply, so when you take you can't index-1, it will be again same index. Note : its is not\ncoin count, its is not of ways, so in base case you will return 1 or 0. And also in the base case you have to\ncheck target % coins[0] == 0",
    "answerDetails": [
      {
        "level": "TUF-DP.22",
        "url": "https://youtu.be/HgyouUi11zk"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "518. Coin Change II",
    "questionUrl": "https://leetcode.com/problems/coin-change-ii/",
    "hint": "similar to [494. Target Sum](https://leetcode.com/problems/target-sum/)\n* Since you infinite coin supply, so when you take you can't index-1, it will be again same index. Note : its is not\ncoin count, its is not of ways, so in base case you will return 1 or 0. And also in the base case you have to\ncheck target % coins[0] == 0",
    "answerDetails": [
      {
        "level": "TUF-DP.22",
        "url": "https://youtu.be/HgyouUi11zk"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "Unbounded Knapsack",
    "questionUrl": "https://www.codingninjas.com/studio/problems/unbounded-knapsack_1215029",
    "hint": "Since infinite value supply, so when you take you can't index-1, it will be again same index. Two types base case.",
    "answerDetails": [
      {
        "level": "TUF-DP.23",
        "url": "https://youtu.be/OgvOZ6OrJoY"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "Rod cutting problem",
    "questionUrl": "https://www.codingninjas.com/codestudio/problems/rod-cutting-problem_800284",
    "hint": "Since you infinite value supply, so when you take you can't index-1, it will be again same index.\n* To watch tabulation way I have seen Tushar video. (Pending )You can also see Aditya Verma video on this.",
    "answerDetails": [
      {
        "level": "TUF-DP.24",
        "url": "https://youtu.be/mO8XpGoJwuo"
      },
      {
        "level": "TUF-DP.24",
        "url": "https://youtu.be/IRwVmTmN6go"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "1143. Longest Common Subsequence",
    "questionUrl": "https://leetcode.com/problems/longest-common-subsequence/",
    "hint": "Striver has explained all the approach. Shown how to handle negative base case(known to me in another way).\n* Initially I understood from AME way which is similar to levenstein(AlgoExpert) distance problem. they have solved\ndirectly using tabulation way.\n* The difference is you need to find the common subsequence while traversing in the 2D array.",
    "answerDetails": [
      {
        "level": "TUF-DP.25",
        "url": "https://youtu.be/NPZn9jBrX8U"
      },
      {
        "level": "AME",
        "url": "https://www.youtube.com/watch?v=M_dpZ8IS_70"
      }
    ]
  },
  {"topic": "DynamicProgramming",
    "questionTitle": "Print Longest Common Subsequence",
    "questionUrl": "https://www.naukri.com/code360/problems/print-longest-common-subsequence_8416383",
    "hint": "Back tracking is the logic. if same i++, j++ else any one of them which is greater.",
    "answerDetails": [
      {
        "level": "TUF-DP.26",
        "url": "https://youtu.be/-zI4mrF2Pb4"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "718. Maximum Length of Repeated Subarray",
    "questionUrl": "https://leetcode.com/problems/maximum-length-of-repeated-subarray/",
    "hint": "Slight modification to the longest common subsequence.See this is something you need to remember.",
    "answerDetails": [
      {
        "level": "TUF-DP.27",
        "url": "https://youtu.be/_wP9mWNPL5w"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "516. Longest Palindromic Subsequence",
    "questionUrl": "https://leetcode.com/problems/longest-palindromic-subsequence/",
    "hint": "You need to reverse the string and need to find LCS between actual string and revered string.",
    "answerDetails": [
      {
        "level": "TUF-DP.28",
        "url": "https://youtu.be/6i_T5kkfv4A"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "132. Palindrome Partitioning II",
    "questionUrl": "https://leetcode.com/problems/palindrome-partitioning-ii/",
    "hint": "Similar to [516.Longest Palindromic Subsequence](https://leetcode.com/problems/longest-palindromic-subsequence/).\n* Here you need to find the minimum cuts required to make all the partitions palindrome.",
    "answerDetails": [
      {
        "level": "TUF-DP.29",
        "url": "https://youtu.be/2b1a9k8g0jY"
      }
    ]
  },
  {
    "topic": "DynamicProgramming",
    "questionTitle": "1216. Valid Palindrome III",
    "questionUrl": "https://leetcode.com/problems/valid-palindrome-iii/",
    "hint": "Similar to [516.Longest Palindromic Subsequence](https://leetcode.com/problems/longest-palindromic-subsequence/).\n* Here you need to find the longest palindromic subsequence of length k.",
    "answerDetails": [
      {
        "level": "Leetocde",
        "url": "https://leetcode.com/problems/valid-palindrome-iii/solutions/397606/find-longest-palindromic-subsequence/?orderBy=most_votes"
      }
    ]
  }

]

