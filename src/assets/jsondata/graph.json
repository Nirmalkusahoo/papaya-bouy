[
  {
    "topic": "Graph",
    "questionTitle": "547. Number of Provinces",
    "questionUrl": "https://leetcode.com/problems/number-of-provinces/",
    "hint": "First solution using DFS call. Second one with disjoint set.",
    "answerDetails": [
      {
        "level": "TUF- G7",
        "url": "https://youtu.be/ACzkVtewUYA"
      },
      {
        "level": "TUF- G48",
        "url": "https://youtu.be/ZGr5nX-Gi6Y"
      }
    ]
  },
  {
    "topic": "Graph",
    "questionTitle": "323. Number of Connected Components in an Undirected Graph",
    "questionUrl": "https://leetcode.com/problems/number-of-connected-components-in-an-undirected-graph/",
    "hint": "Same as [547. Number of Provinces](https://leetcode.com/problems/number-of-provinces/)",
    "answerDetails": [
      {
        "level": "TUF- G7",
        "url": "https://youtu.be/ACzkVtewUYA"
      }
    ]
  },
  {
    "topic": "Graph",
    "questionTitle": "2685. Count the Number of Complete Components",
    "questionUrl": "https://leetcode.com/problems/count-the-number-of-complete-components/",
    "hint": " Same as Connected Components.Traverse each connected component and check whether every node has N-1 vertices in\n      it's adjacency list. If yes, then it is a complete connected component. Else, ignore it.\n    * TC can be improved.Try next time.There are some formula based on edge and vertex.",
    "answerDetails": [
      {
        "level": "Code",
        "url": "https://leetcode.com/problems/count-the-number-of-complete-components/solutions/3531447/easy-to-understand-approach-connected-components/"
      }
    ]
  },
  {
    "topic": "Graph",
    "questionTitle": "200. Number of Islands",
    "questionUrl": "https://leetcode.com/problems/number-of-islands/",
    "hint": "Simple matrix BFS/DFS traversal.",
    "answerDetails": [
      {
        "level": "TUF- G8",
        "url": "https://youtu.be/muncqlKJrH0"
      }
    ]
  },
  {
    "topic": "Graph",
    "questionTitle": "1905. Count Sub Islands",
    "questionUrl": "https://leetcode.com/problems/count-sub-islands/",
    "hint": "Simple matrix BFS/DFS traversal.We just need to check each if(grid2 value present in grid1) then count++"
  },
  {
    "topic": "Graph",
    "questionTitle": "733. Flood Fill",
    "questionUrl": "https://leetcode.com/problems/flood-fill/",
    "hint": "**Skip able**- Simple matrix BFS/DFS traversal. Here the all 0 edge case you need to handle to overflow.",
    "answerDetails": [
      {
        "level": "TUF- G9",
        "url": "https://youtu.be/C-2_uSRli8o"
      }
    ]
  },
  {
    "topic": "Graph",
    "questionTitle": "463. Island Perimeter",
    "questionUrl": "https://leetcode.com/problems/island-perimeter/",
    "hint": "Simple, done own."
  },
  {
    "topic": "Graph",
    "questionTitle": "994. Rotting Oranges",
    "questionUrl": "https://leetcode.com/problems/rotting-oranges/",
    "hint": "See the only point you need to know is rotting oranges starts parallel from all rotten boxes in the beginning.So\nput those {i,j} in to queue first. Then do level order/BFS\n* You will always return time - 1 because of last level; And if (freshOrange == 0) return 0;",
    "answerDetails": [
      {
        "level": "TUF- G10",
        "url": "https://youtu.be/yf3oUhkvqA0"
      }
    ]
  },
  {
    "topic": "Graph",
    "questionTitle": "Detect cycle in an undirected graph",
    "questionUrl": "https://practice.geeksforgeeks.org/problems/detect-cycle-in-an-undirected-graph/1",
    "hint": "G11- Understood nicely .BFS approach .G12-Understood nicely.DFS approach.",
    "answerDetails": [
      {
        "level": "TUF- G11",
        "url": "https://youtu.be/BPlrALf1LDU"
      },
      {
        "level": "TUF- G12",
        "url": "https://youtu.be/zQ3zgFypzX4"
      }
    ]
  },
  {
    "topic": "Graph",
    "questionTitle": "261. Graph Valid Tree",
    "questionUrl": "https://leetcode.com/problems/graph-valid-tree/",
    "hint": "With minor change . A tree should not have cycle and all nodes should be connected.",
  }
]
